# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /									controllers.Application.index()

# BBAnalyzer
GET		/bbanalyzer							controllers.BBAnalyzer.redirectToIndex()
GET		/bbanalyzer/						controllers.BBAnalyzer.index()
GET		/bbanalyzer/kuromoji				controllers.BBAnalyzer.kuromoji()
POST	/bbanalyzer/kuromoji				controllers.BBAnalyzer.procKuromoji()
#POST	/bbanalyzer/analyzeBody				controllers.BBAnalyzer.analyzeBody()
##GET		/bbanalyzer/calc					controllers.BBAnalyzer.calcNaiveBayesParams()
#GET		/bbanalyzer/classify				controllers.BBAnalyzer.classifyAllUsers()
#GET		/bbanalyzer/train					controllers.BBAnalyzer.trainAllItemClassifiers()

# BBAnalyzer API
#POST	/bbanalyzer/postNewItemHeads.json 	controllers.api.BBAnalyzer.postNewItemHeads()
#POST	/bbanalyzer/postReadHistory.json 	controllers.api.BBAnalyzer.postReadHistory()
#GET		/bbanalyzer/classifyItem.json		controllers.api.BBAnalyzer.classifyItem(uid ?= null, id_date ?= null, id_index ?= null)

# Mock BB
GET		/mockbb								controllers.mockbb.MockBB.redirectToIndex()
GET		/mockbb/							controllers.mockbb.MockBB.index()
POST	/mockbb/list						controllers.mockbb.MockBB.getList()
GET		/mockbb/list						controllers.mockbb.MockBB.getList()
GET		/mockbb/detail						controllers.mockbb.MockBB.getDetail()
POST	/mockbb/detail						controllers.mockbb.MockBB.getDetail()
GET		/mockbb/admin						controllers.mockbb.Admin.redirectToIndex()
GET		/mockbb/admin/						controllers.mockbb.Admin.index()
GET		/mockbb/admin/manage				controllers.mockbb.Admin.manage(p:Int ?= 1, s ?= null, o ?= null, f ?= null)
GET		/mockbb/admin/create				controllers.mockbb.Admin.createItemForm()
POST	/mockbb/admin/create				controllers.mockbb.Admin.create()
GET		/mockbb/admin/edit/:id				controllers.mockbb.Admin.editItemForm(id:models.entity.mockbb.MockBBItem.MockBBItemPK)
POST	/mockbb/admin/edit/:id				controllers.mockbb.Admin.edit(id:models.entity.mockbb.MockBBItem.MockBBItemPK)
POST	/mockbb/admin/delete/:id			controllers.mockbb.Admin.delete(id:models.entity.mockbb.MockBBItem.MockBBItemPK)

# BB API
PUT		/bb/on_login.json					controllers.api.BB.onLogin()
GET		/bb/word_list.json					controllers.api.BB.wordList()
PUT		/bb/update_posts.json				controllers.api.BB.updatePosts()
POST	/bb/add_possessions.json			controllers.api.BB.addPossessions()
DELETE	/bb/delete_possessions.json			controllers.api.BB.deletePossessions(nitech_id:String, id_dates:String, id_indexes:String)
POST	/bb/store_histories.json			controllers.api.BB.storeHistories()
GET		/bb/suggestions.json				controllers.api.BB.suggestions(nitech_id:String)
GET		/bb/relevants.json					controllers.api.BB.relevants(id_date:String, id_index:Integer)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file						controllers.Assets.at(path="/public", file)
